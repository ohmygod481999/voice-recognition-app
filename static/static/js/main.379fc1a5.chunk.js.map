{"version":3,"sources":["serviceWorker.js","components/Header.js","voice/voice-recorder.js","config.js","pages/App.js","pages/Login.js","pages/Classes.js","utils/hooks.js","pages/ClassTransaction.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","audioContext","gumStream","rec","input","props","Navbar","bg","className","Container","Nav","Link","to","AudioContext","webkitAudioContext","Recorder","startRecording","navigator","mediaDevices","getUserMedia","audio","video","then","stream","console","log","createMediaStreamSource","numChannels","record","stopRecording","callback","stop","getAudioTracks","exportWAV","blob","SERVER_PATH","override","css","App","classId","params","id","useState","isShow","setShow","loading","setLoading","searchText","setSearchText","noise","setNoise","useEffect","Axios","get","res","data","setStudents","map","student","name","attendant","show","students","modalInfo","setModalInfo","re","RegExp","toString","checkAttendance","studentId","automateCheckingHandle","a","array","fn","index","next","length","processArray","handleShow","handleClose","responsiveVoice","Promise","resolve","reject","speak","onend","setTimeout","noiseBlob","formData","FormData","append","fetch","method","body","json","catch","err","alert","checkAttendantFromServer","status","Swal","fire","title","text","icon","value","Modal","onHide","Body","size","color","Breadcrumb","Item","href","active","Row","Col","md","Form","Control","type","placeholder","onChange","e","target","ListGroup","filter","key","Button","variant","onClick","detail","JSON","stringify","post","date","Date","history","push","Card","controls","src","URL","createObjectURL","preventDefault","cursor","Login","useLocation","formik","useFormik","initialValues","uname","password","onSubmit","values","pathname","style","height","paddingTop","backgroundColor","position","bottom","left","width","Group","Label","handleChange","handleSubmit","Classes","asyncFunction","immediate","pending","setPending","setValue","error","setError","execute","useCallback","response","finally","useAsync","classes","Jumbotron","Img","Title","Text","ClassTransaction","transactions","setTransactions","trans","parse","tran","action","closeButton","getDate","getMonth","getFullYear","Table","striped","bordered","hover","rel","handleOpen","Router","exact","path","render","component","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.379fc1a5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header(props) {\n    return (\n        <div>\n            <Navbar bg=\"light\" className=\"mb-2\">\n                <Container>\n                    <Nav className=\"ml-auto\">\n                        {/* <Nav.Link>\n                            <Link to=\"/classes\">Home</Link>\n                        </Nav.Link> */}\n                        <Nav.Link>\n                            <Link to=\"/classes\">Các lớp của tôi</Link>\n                        </Nav.Link>\n                        <Nav.Link>\n                            <Link to=\"/login\">Logout</Link>\n                        </Nav.Link>\n                    </Nav>\n                </Container>\n            </Navbar>\n        </div>\n    );\n}\n\nHeader.propTypes = {};\n\nexport default Header;\n","var AudioContext = window.AudioContext || window.webkitAudioContext;\nvar audioContext; //audio context to help us record\nconst Recorder = window.Recorder;\n\nvar gumStream; //stream from getUserMedia()\nvar rec; //Recorder.js object\nvar input; //MediaStreamAudioSourceNode we'll be recording\n\nexport function startRecording() {\n    navigator.mediaDevices\n        .getUserMedia({\n            audio: true,\n            video: false,\n        })\n        .then(function (stream) {\n            console.log(\"stream created\");\n\n            audioContext = new AudioContext();\n            // document.getElementById(\"formats\").innerHTML =\n            //     \"Format: 1 channel pcm @ \" + audioContext.sampleRate + \"Hz\";\n\n            gumStream = stream;\n\n            input = audioContext.createMediaStreamSource(stream);\n\n            console.log(input);\n\n            rec = new Recorder(input, { numChannels: 1 });\n\n            //start the recording process\n            rec.record();\n\n            console.log(\"Recording started\");\n        });\n}\n\nexport function stopRecording(callback) {\n    console.log(\"stopButton clicked\");\n\n    //tell the recorder to stop the recording\n    rec.stop();\n\n    //stop microphone access\n    gumStream.getAudioTracks()[0].stop();\n\n    //create the wav blob and pass it on to createDownloadLink\n    rec.exportWAV((blob) => callback(blob));\n}\n\nexport function checkAttendantFromServer(blob, noiseBlob, name, callback) {\n    console.log(blob);\n\n    const formData = new FormData();\n    formData.append(\"file\", blob);\n    formData.append(\"noise\", noiseBlob);\n    formData.append(\"name\", name);\n\n    fetch(\"http://localhost:5000/api/check-attendance\", {\n        method: \"POST\",\n        body: formData,\n        // body: JSON.stringify(data),\n    }).then((res) => {\n        res.json()\n            .then((data) => {\n                if (callback) callback(data);\n            })\n            .catch((err) => {\n                alert(\"Error!\");\n            });\n        // console.log(\"Request complete! response:\", res.body);\n    });\n}\n","// export const SERVER_PATH = \"https://voice-reconition.herokuapp.com\"\nexport const SERVER_PATH = \"http://localhost:5000\"\n// export const SERVER_PATH = \"\"","import React, { useState, useRef, useEffect } from \"react\";\nimport {\n    Navbar,\n    Nav,\n    Container,\n    Jumbotron,\n    Row,\n    Col,\n    Form,\n    ListGroup,\n    Button,\n    Card,\n    Breadcrumb,\n    Modal,\n} from \"react-bootstrap\";\nimport { BsSearch } from \"react-icons/bs/index\";\nimport {\n    AiFillCaretRight,\n    AiOutlineCheck,\n    AiOutlineDelete,\n} from \"react-icons/ai\";\nimport { css } from \"@emotion/core\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport Swal from \"sweetalert2\";\nimport Header from \"../components/Header\";\nimport {\n    startRecording,\n    stopRecording,\n    checkAttendantFromServer,\n} from \"../voice/voice-recorder\";\nimport { SERVER_PATH } from \"../config\";\nimport { useAsync } from \"../utils/hooks\";\nimport { fetchApi } from \"../utils/utils\";\nimport Axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst override = css`\n    display: block;\n    margin: auto;\n    border-color: #007bff;\n`;\n\nfunction App({ ...props }) {\n    const classId = props.match.params.id;\n    const [isShow, setShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [searchText, setSearchText] = useState(\"\");\n    const [noise, setNoise] = useState(null);\n\n    useEffect(() => {\n        Axios.get(SERVER_PATH + `/api/get-students?classId=${classId}`).then(\n            (res) => {\n                if (res.data)\n                    setStudents(\n                        res.data.map((student) => ({\n                            id: student[0],\n                            name: student[1],\n                            attendant: false,\n                            show: true,\n                        }))\n                    );\n            }\n        );\n    }, []);\n\n    const [students, setStudents] = useState([]);\n\n    const [modalInfo, setModalInfo] = useState(students[0]);\n\n    const searchHandle = (e) => {\n        setSearchText(e.target.value);\n        setTimeout(() => {}, 100);\n    };\n\n    useEffect(() => {\n        setStudents(\n            students.map((student) => {\n                var re = new RegExp(`${searchText}`, \"g\");\n                if (student.name.match(re) || student.id.toString().match(re)) {\n                    /*you may also store this in a data structure e.g. array*/\n                    return {\n                        ...student,\n                        show: true,\n                    };\n                } else {\n                    return {\n                        ...student,\n                        show: false,\n                    };\n                }\n            })\n        );\n    }, [searchText]);\n\n    const checkAttendance = (studentId) => {\n        let success = true;\n        if (success) {\n            setStudents(\n                students.map((student) => {\n                    if (student.id === studentId)\n                        return {\n                            ...student,\n                            attendant: true,\n                        };\n                    return student;\n                })\n            );\n        }\n    };\n\n    const removeAttendanceHandle = (studentId) => {\n        setStudents(\n            students.map((student) => {\n                if (student.id === studentId)\n                    return {\n                        ...student,\n                        attendant: false,\n                    };\n                return student;\n            })\n        );\n    };\n\n    const automateCheckingHandle = async () => {\n        function processArray(array, fn) {\n            var index = 0;\n\n            function next() {\n                if (index < array.length) {\n                    fn(array[index++]).then(next);\n                }\n            }\n            next();\n        }\n\n        processArray(students, handleShow);\n\n        // Promise.race(\n        // );\n    };\n\n    const onSave = () => {\n        const detail = JSON.stringify();\n        console.log(detail);\n\n        Axios.post(SERVER_PATH + \"/api/add-class-transaction\", {\n            detail: students.map((student) => ({\n                id: student.id,\n                name: student.name,\n                attendant: student.attendant,\n            })),\n            date: new Date(),\n            classId: classId,\n        }).then((res) => {\n            Swal.fire({\n                title: res.data === \"success\" ? \"Thành công\" : \"Thất bại\",\n                text:\n                    res.data === \"success\"\n                        ? \"Thông tin buổi điểm danh đã được ghi lại\"\n                        : \"Có lỗi xảy ra\",\n                icon: res.data === \"success\" ? \"success\" : \"error\",\n            }).then(({ value }) => {\n                if (value) {\n                    props.history.push(\"/class-transaction/\" + classId);\n                }\n            });\n        });\n    };\n\n    const handleClose = () => setShow(false);\n\n    const handleShow = (student) => {\n        const responsiveVoice = window.responsiveVoice;\n\n        setModalInfo(student);\n        setShow(true);\n        const promise = new Promise((resolve, reject) => {\n            responsiveVoice.speak(\n                \"Bạn \" + student.name + \" có mặt không\",\n                \"Vietnamese Male\",\n                {\n                    onend: function () {\n                        startRecording();\n                        setLoading(true);\n                        setTimeout(() => {\n                            setLoading(false);\n                            stopRecording(function (blob) {\n                                checkAttendantFromServer(\n                                    blob,\n                                    noise,\n                                    student.name,\n                                    function (data) {\n                                        const status = data.status;\n                                        if (status === \"success\") {\n                                            Swal.fire({\n                                                title: \"Thành công\",\n                                                text: `${student.name} đã có mặt`,\n                                                icon: \"success\",\n                                            }).then(({ value }) => {\n                                                checkAttendance(student.id);\n                                                handleClose();\n                                                resolve(true);\n                                            });\n                                        } else {\n                                            Swal.fire({\n                                                title: \"Thất bại\",\n                                                text: `${student.name} Không có mặt`,\n                                                icon: \"error\",\n                                            }).then(({ value }) => {\n                                                handleClose();\n                                                resolve(false);\n                                            });\n                                        }\n                                    }\n                                );\n                            });\n                        }, 3000);\n                    },\n                }\n            );\n        });\n        return promise;\n    };\n\n    const recordNoise = () => {\n        setLoading(true);\n        startRecording();\n        setTimeout(() => {\n            stopRecording(function (blob) {\n                setNoise(blob);\n                alert(URL.createObjectURL(blob));\n                setLoading(false);\n            });\n        }, 2000);\n    };\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <Modal show={isShow} onHide={handleClose}>\n                {/* <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                </Modal.Header> */}\n                <Modal.Body>\n                    {modalInfo && <p>{modalInfo.name}</p>}\n                    {loading ? <p>Recording...</p> : null}\n                    <BeatLoader\n                        css={override}\n                        size={10}\n                        color={\"#123abc\"}\n                        loading={loading}\n                    />\n                </Modal.Body>\n            </Modal>\n            <Container>\n                {/* <div className=\"jumbotron\">\n                    <div class=\"page-header\">\n                        <h1></h1>\n                    </div>\n                </div> */}\n                <Breadcrumb>\n                    <Breadcrumb.Item href=\"#/classes\">Home</Breadcrumb.Item>\n                    <Breadcrumb.Item>\n                        <Link to={`/class-transaction/${classId}`}>\n                            {classId}\n                        </Link>\n                    </Breadcrumb.Item>\n                    <Breadcrumb.Item active>\n                        Tạo mới buổi điểm danh\n                    </Breadcrumb.Item>\n                </Breadcrumb>\n                <Row className=\"mb-5\">\n                    <Col md={8}>\n                        <Form.Row className=\"mb-3\">\n                            <Col className=\"d-flex align-items-center justify-content-around\">\n                                <BsSearch size=\"1.5em\" className=\"mr-3\" />\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Search here\"\n                                    onChange={searchHandle}\n                                />\n                            </Col>\n                        </Form.Row>\n                        <div className=\"list-box\">\n                            <ListGroup>\n                                {students.length > 0 ? (\n                                    students\n                                        .filter((student) => !student.attendant)\n                                        .filter((student) => student.show)\n                                        .map((student) => (\n                                            <ListGroup.Item key={student.id}>\n                                                <div className=\"title-group\">\n                                                    <div className=\"l-title\">\n                                                        {student.name}\n                                                    </div>\n                                                    <div className=\"l-description\">\n                                                        {student.id}\n                                                    </div>\n                                                </div>\n                                                <div className=\"float-right clearfix\">\n                                                    <Button\n                                                        className=\"mr-2\"\n                                                        variant=\"outline-primary\"\n                                                        onClick={() => {\n                                                            checkAttendance(student.id);\n                                                        }}\n                                                    >\n                                                        Có mặt\n                                                    </Button>\n                                                    <Button\n                                                        variant=\"outline-success\"\n                                                        onClick={() => {\n                                                            handleShow(student);\n                                                        }}\n                                                    >\n                                                        check\n                                                    </Button>\n                                                </div>\n                                            </ListGroup.Item>\n                                        ))\n                                ) : (\n                                    <p>Trống</p>\n                                )}\n                            </ListGroup>\n                        </div>\n                        <Button\n                            className=\"mt-2\"\n                            color=\"success\"\n                            onClick={automateCheckingHandle}\n                        >\n                            Điểm danh tự động\n                        </Button>\n\n                        <Button\n                            className=\"mt-2 ml-2\"\n                            color=\"success\"\n                            onClick={onSave}\n                        >\n                            Save\n                        </Button>\n                    </Col>\n                    <Col md={4}>\n                        <Card className=\"mb-3\">\n                            <Card.Header>Noise context</Card.Header>\n                            <Card.Body>\n                                {noise ? (\n                                    <div>\n                                        <audio controls>\n                                            <source\n                                                src={URL.createObjectURL(noise)}\n                                                type=\"audio/wav\"\n                                            />\n                                            Your browser does not support the\n                                            audio element.\n                                        </audio>\n                                        <a\n                                            href=\"#cc\"\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                setNoise(null);\n                                            }}\n                                        >\n                                            delete\n                                        </a>\n                                    </div>\n                                ) : (\n                                    <div>\n                                        <Button onClick={recordNoise}>\n                                            Record noise\n                                        </Button>\n                                        {loading ? <p>Recording...</p> : null}\n                                        <BeatLoader\n                                            css={override}\n                                            size={10}\n                                            color={\"#123abc\"}\n                                            loading={loading}\n                                        />\n                                    </div>\n                                )}\n                            </Card.Body>\n                        </Card>\n                        <Card>\n                            <Card.Header>Sinh viên có mặt</Card.Header>\n                            <Card.Body>\n                                <div className=\"l-list\">\n                                    {students\n                                        .filter((student) => student.attendant)\n                                        .map((student) => (\n                                            <div\n                                                key={student.id}\n                                                className=\"l-item\"\n                                            >\n                                                <AiOutlineCheck\n                                                    color=\"green\"\n                                                    size=\"1.3em\"\n                                                    className=\"mr-2\"\n                                                />\n                                                <span>{student.name}</span>\n                                                <div className=\"float-right\">\n                                                    <AiOutlineDelete\n                                                        size=\"1.5em\"\n                                                        color=\"red\"\n                                                        cursor=\"pointer\"\n                                                        onClick={() =>\n                                                            removeAttendanceHandle(\n                                                                student.id\n                                                            )\n                                                        }\n                                                    />\n                                                </div>\n                                            </div>\n                                        ))}\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Form, Container, Button } from \"react-bootstrap\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport Axios from \"axios\";\nimport { SERVER_PATH } from \"../config\";\nimport Swal from \"sweetalert2\";\n\nfunction Login(props) {\n    let location = useLocation();\n\n    const formik = useFormik({\n        initialValues: {\n            uname: \"\",\n            password: \"\",\n        },\n        onSubmit: function (values) {\n            const { uname, password } = values;\n            if (location.pathname === \"/login\") {\n                Axios.post(SERVER_PATH + \"/api/login\", {\n                    uname: uname,\n                    password: password,\n                }).then((res) => {\n                    if (res.data === \"success\") {\n                        props.history.push(\"/login\");\n                        Swal.fire({\n                            title: \"Success\",\n                            text: \"Đăng nhập thành công\",\n                            icon: \"success\",\n                        }).then(() => {\n                            props.history.push(\"/classes\");\n                        });\n                    } else {\n                        Swal.fire({\n                            title: \"Đăng nhập thất bại\",\n                            text: res.data,\n                            icon: \"error\",\n                        });\n                    }\n                });\n            } else {\n                Axios.post(SERVER_PATH + \"/api/register\", {\n                    uname: uname,\n                    password: password,\n                }).then((res) => {\n                    if (res.data === \"success\") {\n                        Swal.fire({\n                            title: \"Success\",\n                            text: \"Tạo tài khoản thành công\",\n                            icon: \"success\",\n                        }).then(() => {\n                            props.history.push(\"/login\");\n                        });\n                    } else {\n                        Swal.fire({\n                            title: \"Fail\",\n                            text: res.data,\n                            icon: \"error\",\n                        });\n                    }\n                    // return alert(JSON.stringify(res.data));\n                });\n            }\n            // alert(JSON.stringify(values));\n        },\n    });\n\n    return (\n        <div\n            className=\"row\"\n            style={{\n                height: \"100vh\",\n            }}\n        >\n            <div\n                className=\"col-md-4 d-flex justify-content-center \"\n                style={{\n                    paddingTop: \"20%\",\n                    backgroundColor: \"#1d4f9e\",\n                    color: \"white\",\n                }}\n            >\n                <div className=\"text-center\">\n                    <h1>Ứng dụng hỗ trợ điểm danh</h1>\n                    <h3>UET attendant</h3>\n                    <p\n                        style={{\n                            position: \"absolute\",\n                            bottom: 0,\n                            left: \"30%\",\n                        }}\n                    >\n                        <i>Developed by UET</i>\n                    </p>\n                    {/* <img\n                    alt=\"img\"\n                    src=\"https://images.unsplash.com/photo-1587613990174-1f14ba3be7cb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=800\"\n                /> */}\n                </div>\n            </div>\n            <div className=\" col-md-8  d-flex align-items-center justify-content-center\">\n                {/* <div className=\"form-box\"> */}\n                <div\n                    style={{\n                        width: \"60%\",\n                    }}\n                >\n                    {location.pathname === \"/login\" ? (\n                        <h2>Đăng nhập</h2>\n                    ) : (\n                        <h2>Đăng ký</h2>\n                    )}\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            name=\"uname\"\n                            value={formik.values.uname}\n                            onChange={formik.handleChange}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            name=\"password\"\n                            type=\"password\"\n                            value={formik.values.password}\n                            onChange={formik.handleChange}\n                        />\n                    </Form.Group>\n                    <div>\n                        {location.pathname === \"/login\" ? (\n                            <Link to=\"/register\">Đăng ký tại đây</Link>\n                        ) : (\n                            <Link to=\"/login\">Đặng nhập</Link>\n                        )}\n                    </div>\n                    <Button\n                        className=\"mt-3\"\n                        onClick={formik.handleSubmit}\n                        // onClick={() => {\n                        //     props.history.push(\"/classes\");\n                        // }}\n                    >\n                        Submit\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nLogin.propTypes = {};\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\nimport { SERVER_PATH } from \"../config\";\nimport { useAsync } from \"../utils/hooks\";\nimport { Card, Row, Col, Container, Jumbotron } from \"react-bootstrap\";\nimport Header from \"../components/Header\";\nimport { Link } from \"react-router-dom\";\n\nfunction Classes() {\n    const [execute, pending, classes, error] = useAsync(fetchClasses, false);\n\n    useEffect(() => {\n        execute();\n    }, []);\n\n    function fetchClasses() {\n        return new Promise((resolve, reject) => {\n            fetch(SERVER_PATH + \"/api/get-classes\", {\n                method: \"GET\",\n            })\n                .then((res) => {\n                    res.json().then((data) => {\n                        resolve(data);\n                    });\n                })\n                .catch((err) => reject(err));\n        });\n    }\n\n    // console.log(classes);\n\n    return (\n        <div>\n            <Header />\n            <Container>\n                <Jumbotron>\n                    <h1>Các lớp của tôi</h1>\n                </Jumbotron>\n                {classes ? (\n                    <Row>\n                        {classes.map((value) => (\n                            <Col md={4} key={value[0]}>\n                                <Card>\n                                    <Card.Img variant=\"top\" src={value[2]} />\n                                    <Card.Title className=\"m-2\">\n                                        <Link\n                                            to={`/class-transaction/${value[0]}`}\n                                        >\n                                            {value[0]}\n                                        </Link>\n                                    </Card.Title>\n                                    <Card.Text className=\"m-2\">{value[1]}</Card.Text>\n                                </Card>\n                            </Col>\n                        ))}\n                    </Row>\n                ) : (\n                    <div>null</div>\n                )}\n            </Container>\n        </div>\n    );\n}\n\nexport default Classes;\n","import { useState, useCallback, useEffect } from \"react\";\n\nexport const useAsync = (asyncFunction, immediate = true) => {\n    const [pending, setPending] = useState(false);\n    const [value, setValue] = useState(null);\n    const [error, setError] = useState(null);\n\n    // The execute function wraps asyncFunction and\n    // handles setting state for pending, value, and error.\n    // useCallback ensures the below useEffect is not called\n    // on every render, but only if asyncFunction changes.\n    const execute = useCallback(() => {\n        setPending(true);\n        setValue(null);\n        setError(null);\n        return asyncFunction()\n            .then((response) => setValue(response))\n            .catch((error) => setError(error))\n            .finally(() => setPending(false));\n    }, [asyncFunction]);\n\n    // Call execute if we want to fire it right away.\n    // Otherwise execute can be called later, such as\n    // in an onClick handler.\n    useEffect(() => {\n        if (immediate) {\n            execute();\n        }\n    }, [execute, immediate]);\n\n    return [execute, pending, value, error, setValue];\n};\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport Header from \"../components/Header\";\nimport { Container, ListGroup, Modal, Table, Button } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport { SERVER_PATH } from \"../config\";\nimport { Link } from \"react-router-dom\";\n\nfunction ClassTransaction({ match, ...props }) {\n    const classId = match.params.id;\n    const [transactions, setTransactions] = useState([]);\n    const [isShow, setShow] = useState(false);\n    const [modalInfo, setModalInfo] = useState(null);\n\n    const handleClose = () => setShow(false);\n\n    const handleOpen = (tran) => {\n        setModalInfo(\n            <Fragment>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Điểm danh ngày {tran.date.getDate()}/\n                        {tran.date.getMonth()}/{tran.date.getFullYear()}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>mssv</th>\n                                    <th>Name</th>\n                                    <th>Có mặt</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {tran.detail.map((student) => (\n                                    <tr key={student.id}>\n                                        <td>{student.id}</td>\n                                        <td>{student.name}</td>\n                                        <td>\n                                            {student.attendant\n                                                ? \"Có mặt\"\n                                                : \"Vắng\"}\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                            <a\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href={`${SERVER_PATH}/attendant-csv/${tran.id}`}\n                            >\n                                <Button className=\"mt-2\">Export Excel</Button>\n                            </a>\n                        </Table>\n                    </div>\n                </Modal.Body>\n            </Fragment>\n        );\n        setShow(true);\n    };\n\n    useEffect(() => {\n        Axios.get(\n            SERVER_PATH + \"/api/get-class-transaction?classId=\" + classId\n        ).then((res) => {\n            // console.log(res.data.map((trans) => ({\n            //     id: trans[0],\n            //     date: new Date(trans[1]),\n            //     classId: trans[2],\n            //     detail: JSON.parse(trans[3]),\n            // })))\n            setTransactions(\n                res.data.map((trans) => ({\n                    id: trans[0],\n                    date: new Date(trans[1]),\n                    classId: trans[2],\n                    detail: JSON.parse(trans[3]),\n                }))\n            );\n        });\n    }, []);\n\n    return (\n        <div>\n            <Header />\n            <Modal show={isShow} onHide={handleClose}>\n                {modalInfo}\n            </Modal>\n            <Container>\n                <h3>Lịch sử điểm danh</h3>\n                <ListGroup>\n                    {transactions.map((tran) => (\n                        <ListGroup.Item\n                            key={tran.id}\n                            action\n                            onClick={() => handleOpen(tran)}\n                        >\n                            {tran.classId} - {tran.date.getDate()}/\n                            {tran.date.getMonth()}/{tran.date.getFullYear()}\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n                <ListGroup className=\"mt-3\">\n                    <ListGroup.Item action variant=\"primary\">\n                        <Link to={`/class/${classId}`}>\n                            + Điểm danh hôm nay\n                        </Link>\n                    </ListGroup.Item>\n                </ListGroup>\n            </Container>\n        </div>\n    );\n}\n\nexport default ClassTransaction;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route, Redirect } from \"react-router\";\nimport App from \"./pages/App\";\nimport Login from \"./pages/Login\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Classes from \"./pages/Classes\";\nimport ClassTransaction from \"./pages/ClassTransaction\";\n\nfunction Router(props) {\n    return (\n        <div>\n            <Switch>\n                <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\n                <Route exact path=\"/class/:id\" component={App} />\n                <Route\n                    exact\n                    path=\"/class-transaction/:id\"\n                    component={ClassTransaction}\n                />\n                <Route exact path=\"/classes\" component={Classes} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/register\" component={Login} />\n            </Switch>\n        </div>\n    );\n}\n\nRouter.propTypes = {};\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { IconContext } from \"react-icons\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}