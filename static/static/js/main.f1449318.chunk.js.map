{"version":3,"sources":["serviceWorker.js","components/Header.js","voice/voice-recorder.js","config.js","pages/App.js","pages/Login.js","pages/Classes.js","utils/hooks.js","pages/ClassTransaction.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","audioContext","gumStream","rec","input","props","Navbar","bg","className","Container","Nav","Link","to","AudioContext","webkitAudioContext","Recorder","startRecording","navigator","mediaDevices","getUserMedia","audio","video","then","stream","console","log","createMediaStreamSource","numChannels","record","stopRecording","callback","stop","getAudioTracks","exportWAV","blob","override","css","App","classId","params","id","useState","isShow","setShow","loading","setLoading","searchText","setSearchText","useEffect","Axios","get","res","data","setStudents","map","student","name","attendant","show","students","modalInfo","setModalInfo","re","RegExp","toString","automateCheckingHandle","processArray","a","array","fn","index","next","length","handleShow","handleClose","responsiveVoice","Promise","resolve","reject","noiseBlob","setTimeout","speak","onend","formData","FormData","append","fetch","method","body","json","catch","err","alert","checkAttendantFromServer","status","Swal","fire","title","text","icon","studentId","value","Modal","onHide","Body","size","color","Breadcrumb","Item","href","active","Row","Col","md","Form","Control","type","placeholder","onChange","e","target","ListGroup","filter","key","Button","variant","onClick","detail","JSON","stringify","post","date","Date","history","push","Card","cursor","Login","Group","Label","Classes","asyncFunction","immediate","pending","setPending","setValue","error","setError","execute","useCallback","response","finally","useAsync","classes","Img","src","Title","Text","ClassTransaction","transactions","setTransactions","trans","parse","tran","action","closeButton","getDate","getMonth","getFullYear","Table","striped","bordered","hover","rel","handleOpen","Router","exact","path","render","component","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f1449318.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header(props) {\n    return (\n        <div>\n            <Navbar bg=\"light\" className=\"mb-2\">\n                <Container>\n                    <Nav className=\"ml-auto\">\n                        <Nav.Link>\n                            <Link to=\"/\">Home</Link>\n                        </Nav.Link>\n                        <Nav.Link>\n                            <Link to=\"/classes\">Các lớp của tôi</Link>\n                        </Nav.Link>\n                        <Nav.Link>\n                            <Link to=\"/login\">Logout</Link>\n                        </Nav.Link>\n                    </Nav>\n                </Container>\n            </Navbar>\n        </div>\n    );\n}\n\nHeader.propTypes = {};\n\nexport default Header;\n","var AudioContext = window.AudioContext || window.webkitAudioContext;\nvar audioContext; //audio context to help us record\nconst Recorder = window.Recorder;\n\nvar gumStream; //stream from getUserMedia()\nvar rec; //Recorder.js object\nvar input; //MediaStreamAudioSourceNode we'll be recording\n\nexport function startRecording() {\n    navigator.mediaDevices\n        .getUserMedia({\n            audio: true,\n            video: false,\n        })\n        .then(function (stream) {\n            console.log(\"stream created\");\n\n            audioContext = new AudioContext();\n            // document.getElementById(\"formats\").innerHTML =\n            //     \"Format: 1 channel pcm @ \" + audioContext.sampleRate + \"Hz\";\n\n            gumStream = stream;\n\n            input = audioContext.createMediaStreamSource(stream);\n\n            console.log(input);\n\n            rec = new Recorder(input, { numChannels: 1 });\n\n            //start the recording process\n            rec.record();\n\n            console.log(\"Recording started\");\n        });\n}\n\nexport function stopRecording(callback) {\n    console.log(\"stopButton clicked\");\n\n    //tell the recorder to stop the recording\n    rec.stop();\n\n    //stop microphone access\n    gumStream.getAudioTracks()[0].stop();\n\n    //create the wav blob and pass it on to createDownloadLink\n    rec.exportWAV((blob) => callback(blob));\n}\n\nexport function checkAttendantFromServer(blob, noiseBlob, name, callback) {\n    console.log(blob);\n\n    const formData = new FormData();\n    formData.append(\"file\", blob);\n    formData.append(\"noise\", noiseBlob);\n    formData.append(\"name\", name);\n\n    fetch(\"http://localhost:5000/api/check-attendance\", {\n        method: \"POST\",\n        body: formData,\n        // body: JSON.stringify(data),\n    }).then((res) => {\n        res.json()\n            .then((data) => {\n                if (callback) callback(data);\n            })\n            .catch((err) => {\n                alert(\"Error!\");\n            });\n        // console.log(\"Request complete! response:\", res.body);\n    });\n}\n","// export const SERVER_PATH = \"https://voice-reconition.herokuapp.com\"\n// export const SERVER_PATH = \"http://localhost:5000\"\nexport const SERVER_PATH = \"\"","import React, { useState, useRef, useEffect } from \"react\";\nimport {\n    Navbar,\n    Nav,\n    Container,\n    Jumbotron,\n    Row,\n    Col,\n    Form,\n    ListGroup,\n    Button,\n    Card,\n    Breadcrumb,\n    Modal,\n} from \"react-bootstrap\";\nimport { BsSearch } from \"react-icons/bs/index\";\nimport {\n    AiFillCaretRight,\n    AiOutlineCheck,\n    AiOutlineDelete,\n} from \"react-icons/ai\";\nimport { css } from \"@emotion/core\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport Swal from \"sweetalert2\";\nimport Header from \"../components/Header\";\nimport {\n    startRecording,\n    stopRecording,\n    checkAttendantFromServer,\n} from \"../voice/voice-recorder\";\nimport { SERVER_PATH } from \"../config\";\nimport { useAsync } from \"../utils/hooks\";\nimport { fetchApi } from \"../utils/utils\";\nimport Axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst override = css`\n    display: block;\n    margin: auto;\n    border-color: #007bff;\n`;\n\nfunction App({ ...props }) {\n    const classId = props.match.params.id;\n    const [isShow, setShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [searchText, setSearchText] = useState(\"\");\n\n    useEffect(() => {\n        Axios.get(SERVER_PATH + `/api/get-students?classId=${classId}`).then(\n            (res) => {\n                if (res.data)\n                    setStudents(\n                        res.data.map((student) => ({\n                            id: student[0],\n                            name: student[1],\n                            attendant: false,\n                            show: true,\n                        }))\n                    );\n            }\n        );\n    }, []);\n\n    const [students, setStudents] = useState([]);\n\n    const [modalInfo, setModalInfo] = useState(students[0]);\n\n    const searchHandle = (e) => {\n        setSearchText(e.target.value);\n        setTimeout(() => {}, 100);\n    };\n\n    useEffect(() => {\n        setStudents(\n            students.map((student) => {\n                var re = new RegExp(`${searchText}`, \"g\");\n                if (student.name.match(re) || student.id.toString().match(re)) {\n                    /*you may also store this in a data structure e.g. array*/\n                    return {\n                        ...student,\n                        show: true,\n                    };\n                } else {\n                    return {\n                        ...student,\n                        show: false,\n                    };\n                }\n            })\n        );\n    }, [searchText]);\n\n    const checkAttendance = (studentId) => {\n        let success = true;\n        if (success) {\n            setStudents(\n                students.map((student) => {\n                    if (student.id === studentId)\n                        return {\n                            ...student,\n                            attendant: true,\n                        };\n                    return student;\n                })\n            );\n        }\n    };\n\n    const removeAttendanceHandle = (studentId) => {\n        setStudents(\n            students.map((student) => {\n                if (student.id === studentId)\n                    return {\n                        ...student,\n                        attendant: false,\n                    };\n                return student;\n            })\n        );\n    };\n\n    const automateCheckingHandle = async () => {\n        const actionPromises = students.map((student) => {\n            return () => handleShow(student);\n        });\n\n        function processArray(array, fn) {\n            var index = 0;\n\n            function next() {\n                if (index < array.length) {\n                    fn(array[index++]).then(next);\n                }\n            }\n            next();\n        }\n\n        processArray(students, handleShow);\n\n        // Promise.race(\n        // );\n    };\n\n    const onSave = () => {\n        const detail = JSON.stringify();\n        console.log(detail);\n\n        Axios.post(SERVER_PATH + \"/api/add-class-transaction\", {\n            detail: students.map((student) => ({\n                id: student.id,\n                name: student.name,\n                attendant: student.attendant,\n            })),\n            date: new Date(),\n            classId: classId,\n        }).then((res) => {\n            Swal.fire({\n                title: res.data === \"success\" ? \"Thành công\" : \"Thất bại\",\n                text:\n                    res.data === \"success\"\n                        ? \"Thông tin buổi điểm danh đã được ghi lại\"\n                        : \"Có lỗi xảy ra\",\n                icon: res.data === \"success\" ? \"success\" : \"error\",\n            }).then(({ value }) => {\n                if (value) {\n                    props.history.push(\"/class-transaction/\" + classId);\n                }\n            });\n        });\n    };\n\n    const handleClose = () => setShow(false);\n\n    const handleShow = (student) => {\n        const responsiveVoice = window.responsiveVoice;\n\n        setModalInfo(student);\n        setShow(true);\n        const promise = new Promise((resolve, reject) => {\n            startRecording();\n            let noiseBlob;\n            setTimeout(function () {\n                stopRecording(function (blob) {\n                    noiseBlob = blob;\n                    responsiveVoice.speak(\n                        \"Bạn \" + student.name + \" có mặt không\",\n                        \"Vietnamese Male\",\n                        {\n                            onend: function () {\n                                startRecording();\n                                setLoading(true);\n                                setTimeout(() => {\n                                    setLoading(false);\n                                    stopRecording(function (blob) {\n                                        checkAttendantFromServer(\n                                            blob,\n                                            noiseBlob,\n                                            student.name,\n                                            function (data) {\n                                                const status = data.status;\n                                                if (status === \"success\") {\n                                                    Swal.fire({\n                                                        title: \"Thành công\",\n                                                        text: `${student.name} đã có mặt`,\n                                                        icon: \"success\",\n                                                    }).then(({ value }) => {\n                                                        checkAttendance(\n                                                            student.id\n                                                        );\n                                                        handleClose();\n                                                        resolve(true);\n                                                    });\n                                                } else {\n                                                    Swal.fire({\n                                                        title: \"Thất bại\",\n                                                        text: `${student.name} Không có mặt`,\n                                                        icon: \"error\",\n                                                    }).then(({ value }) => {\n                                                        handleClose();\n                                                        resolve(false);\n                                                    });\n                                                }\n                                            }\n                                        );\n                                    });\n                                }, 3000);\n                            },\n                        }\n                    );\n                });\n            }, 2000);\n        });\n        return promise;\n    };\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <Modal show={isShow} onHide={handleClose}>\n                {/* <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                </Modal.Header> */}\n                <Modal.Body>\n                    {modalInfo && <p>{modalInfo.name}</p>}\n                    {loading ? <p>Recording...</p> : null}\n                    <BeatLoader\n                        css={override}\n                        size={10}\n                        color={\"#123abc\"}\n                        loading={loading}\n                    />\n                </Modal.Body>\n            </Modal>\n            <Container>\n                {/* <div className=\"jumbotron\">\n                    <div class=\"page-header\">\n                        <h1></h1>\n                    </div>\n                </div> */}\n                <Breadcrumb>\n                    <Breadcrumb.Item href=\"#/classes\">Home</Breadcrumb.Item>\n                    <Breadcrumb.Item>\n                        <Link to={`/class-transaction/${classId}`}>\n                            {classId}\n                        </Link>\n                    </Breadcrumb.Item>\n                    <Breadcrumb.Item active>\n                        Tạo mới buổi điểm danh\n                    </Breadcrumb.Item>\n                </Breadcrumb>\n                <Row className=\"mb-5\">\n                    <Col md={8}>\n                        <Form.Row className=\"mb-3\">\n                            <Col className=\"d-flex align-items-center justify-content-around\">\n                                <BsSearch size=\"1.5em\" className=\"mr-3\" />\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Search here\"\n                                    onChange={searchHandle}\n                                />\n                            </Col>\n                        </Form.Row>\n                        <div className=\"list-box\">\n                            <ListGroup>\n                                {students.length > 0 ? (\n                                    students\n                                        .filter((student) => !student.attendant)\n                                        .filter((student) => student.show)\n                                        .map((student) => (\n                                            <ListGroup.Item key={student.id}>\n                                                <div className=\"title-group\">\n                                                    <div className=\"l-title\">\n                                                        {student.name}\n                                                    </div>\n                                                    <div className=\"l-description\">\n                                                        {student.id}\n                                                    </div>\n                                                </div>\n                                                <div className=\"float-right clearfix\">\n                                                    <Button\n                                                        variant=\"outline-success\"\n                                                        onClick={() => {\n                                                            handleShow(student);\n                                                        }}\n                                                    >\n                                                        check\n                                                    </Button>\n                                                </div>\n                                            </ListGroup.Item>\n                                        ))\n                                ) : (\n                                    <p>Trống</p>\n                                )}\n                            </ListGroup>\n                        </div>\n                        <Button\n                            className=\"mt-2\"\n                            color=\"success\"\n                            onClick={automateCheckingHandle}\n                        >\n                            Điểm danh tự động\n                        </Button>\n\n                        <Button\n                            className=\"mt-2 ml-2\"\n                            color=\"success\"\n                            onClick={onSave}\n                        >\n                            Save\n                        </Button>\n                    </Col>\n                    <Col md={4}>\n                        <Card>\n                            <Card.Header>Sinh viên có mặt</Card.Header>\n                            <Card.Body>\n                                <div className=\"l-list\">\n                                    {students\n                                        .filter((student) => student.attendant)\n                                        .map((student) => (\n                                            <div\n                                                key={student.id}\n                                                className=\"l-item\"\n                                            >\n                                                <AiOutlineCheck\n                                                    color=\"green\"\n                                                    size=\"1.3em\"\n                                                    className=\"mr-2\"\n                                                />\n                                                <span>{student.name}</span>\n                                                <div className=\"float-right\">\n                                                    <AiOutlineDelete\n                                                        size=\"1.5em\"\n                                                        color=\"red\"\n                                                        cursor=\"pointer\"\n                                                        onClick={() =>\n                                                            removeAttendanceHandle(\n                                                                student.id\n                                                            )\n                                                        }\n                                                    />\n                                                </div>\n                                            </div>\n                                        ))}\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Form, Container, Button } from \"react-bootstrap\";\n\nfunction Login(props) {\n    return (\n        <div className=\"bg-image d-flex justify-content-center align-items-center\">\n            <div className=\"form-box\">\n                <Form.Group>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control name=\"uname\" />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control name=\"password\" type=\"password\" />\n                </Form.Group>\n                <Button onClick={() => {\n                    props.history.push('/classes')\n                }\n                }>Submit</Button>\n            </div>\n        </div>\n    );\n}\n\nLogin.propTypes = {};\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\nimport { SERVER_PATH } from \"../config\";\nimport { useAsync } from \"../utils/hooks\";\nimport { Card, Row, Col, Container } from \"react-bootstrap\";\nimport Header from \"../components/Header\";\nimport { Link } from \"react-router-dom\";\n\nfunction Classes() {\n    const [execute, pending, classes, error] = useAsync(fetchClasses, false);\n\n    useEffect(() => {\n        execute();\n    }, []);\n\n    function fetchClasses() {\n        return new Promise((resolve, reject) => {\n            fetch(SERVER_PATH + \"/api/get-classes\", {\n                method: \"GET\",\n            })\n                .then((res) => {\n                    res.json().then((data) => {\n                        resolve(data);\n                    });\n                })\n                .catch((err) => reject(err));\n        });\n    }\n\n    // console.log(classes);\n\n    return (\n        <div>\n            <Header />\n            <Container>\n                {classes ? (\n                    <Row>\n                        {classes.map((value) => (\n                            <Col md={4} key={value[0]}>\n                                <Card>\n                                    <Card.Img variant=\"top\" src={value[2]} />\n                                    <Card.Title>\n                                        <Link to={`/class-transaction/${value[0]}`}>\n                                            {value[0]}\n                                        </Link>\n                                    </Card.Title>\n                                    <Card.Text>{value[1]}</Card.Text>\n                                </Card>\n                            </Col>\n                        ))}\n                    </Row>\n                ) : (\n                    <div>null</div>\n                )}\n            </Container>\n        </div>\n    );\n}\n\nexport default Classes;\n","import { useState, useCallback, useEffect } from \"react\";\n\nexport const useAsync = (asyncFunction, immediate = true) => {\n    const [pending, setPending] = useState(false);\n    const [value, setValue] = useState(null);\n    const [error, setError] = useState(null);\n\n    // The execute function wraps asyncFunction and\n    // handles setting state for pending, value, and error.\n    // useCallback ensures the below useEffect is not called\n    // on every render, but only if asyncFunction changes.\n    const execute = useCallback(() => {\n        setPending(true);\n        setValue(null);\n        setError(null);\n        return asyncFunction()\n            .then((response) => setValue(response))\n            .catch((error) => setError(error))\n            .finally(() => setPending(false));\n    }, [asyncFunction]);\n\n    // Call execute if we want to fire it right away.\n    // Otherwise execute can be called later, such as\n    // in an onClick handler.\n    useEffect(() => {\n        if (immediate) {\n            execute();\n        }\n    }, [execute, immediate]);\n\n    return [execute, pending, value, error, setValue];\n};\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport Header from \"../components/Header\";\nimport { Container, ListGroup, Modal, Table, Button } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport { SERVER_PATH } from \"../config\";\nimport { Link } from \"react-router-dom\";\n\nfunction ClassTransaction({ match, ...props }) {\n    const classId = match.params.id;\n    const [transactions, setTransactions] = useState([]);\n    const [isShow, setShow] = useState(false);\n    const [modalInfo, setModalInfo] = useState(null);\n\n    const handleClose = () => setShow(false);\n\n    const handleOpen = (tran) => {\n        setModalInfo(\n            <Fragment>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Điểm danh ngày {tran.date.getDate()}/\n                        {tran.date.getMonth()}/{tran.date.getFullYear()}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>mssv</th>\n                                    <th>Name</th>\n                                    <th>Có mặt</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {tran.detail.map((student) => (\n                                    <tr key={student.id}>\n                                        <td>{student.id}</td>\n                                        <td>{student.name}</td>\n                                        <td>\n                                            {student.attendant\n                                                ? \"Có mặt\"\n                                                : \"Vắng\"}\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                            <a\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href={`${SERVER_PATH}/attendant-csv/${tran.id}`}\n                            >\n                                <Button className=\"mt-2\">Export Excel</Button>\n                            </a>\n                        </Table>\n                    </div>\n                </Modal.Body>\n            </Fragment>\n        );\n        setShow(true);\n    };\n\n    useEffect(() => {\n        Axios.get(\n            SERVER_PATH + \"/api/get-class-transaction?classId=\" + classId\n        ).then((res) => {\n            // console.log(res.data.map((trans) => ({\n            //     id: trans[0],\n            //     date: new Date(trans[1]),\n            //     classId: trans[2],\n            //     detail: JSON.parse(trans[3]),\n            // })))\n            setTransactions(\n                res.data.map((trans) => ({\n                    id: trans[0],\n                    date: new Date(trans[1]),\n                    classId: trans[2],\n                    detail: JSON.parse(trans[3]),\n                }))\n            );\n        });\n    }, []);\n\n    return (\n        <div>\n            <Header />\n            <Modal show={isShow} onHide={handleClose}>\n                {modalInfo}\n            </Modal>\n            <Container>\n                <h3>Lịch sử điểm danh</h3>\n                <ListGroup>\n                    {transactions.map((tran) => (\n                        <ListGroup.Item\n                            key={tran.id}\n                            action\n                            onClick={() => handleOpen(tran)}\n                        >\n                            {tran.classId} - {tran.date.getDate()}/\n                            {tran.date.getMonth()}/{tran.date.getFullYear()}\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n                <ListGroup className=\"mt-3\">\n                    <ListGroup.Item action variant=\"primary\">\n                        <Link to={`/class/${classId}`}>\n                            + Điểm danh hôm nay\n                        </Link>\n                    </ListGroup.Item>\n                </ListGroup>\n            </Container>\n        </div>\n    );\n}\n\nexport default ClassTransaction;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route, Redirect } from \"react-router\";\nimport App from \"./pages/App\";\nimport Login from \"./pages/Login\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Classes from \"./pages/Classes\";\nimport ClassTransaction from \"./pages/ClassTransaction\";\n\nfunction Router(props) {\n    return (\n        <div>\n            <Switch>\n                <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\n                <Route exact path=\"/class/:id\" component={App} />\n                <Route\n                    exact\n                    path=\"/class-transaction/:id\"\n                    component={ClassTransaction}\n                />\n                <Route exact path=\"/classes\" component={Classes} />\n                <Route path=\"/login\" component={Login} />\n            </Switch>\n        </div>\n    );\n}\n\nRouter.propTypes = {};\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { IconContext } from \"react-icons\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}